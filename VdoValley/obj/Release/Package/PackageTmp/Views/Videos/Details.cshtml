@model VdoValley.Models.Video
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = Model.Title;
    ViewBag.OgThumbnail = Model.getDailyMotionThumb(Model.getDailyMotionVideoCode(Model.Url), VdoValley.Models.DailymotionThumbnailSize.thumbnail_large_url);
}

<script>
    $(function () {
        $(".rating-star-block .star").mouseenter(function () {
            var hoverVal = $(this).attr('rating');
            $(this).prevUntil().addClass("filled");
            $(this).addClass("filled");
            $("#RAT").html(hoverVal);
        });

        $(".rating-star-block .star").mouseleave(function () {
            $("#" + $(this).parent().attr('id') + " .star").each(function () {
                $(this).addClass("outline");
                $(this).removeClass("filled");
            });
        });

        $(".rating-star-block .star").click(function (e) {
            e.preventDefault();
            var v = $(this).attr('rating');
            var newScore = 0;
            var updateP = "#" + $(this).parent().attr('id') + ' .CurrentScore';
            var artID = $("#" + $(this).parent().attr('id') + ' .articleID').val();
            var UserId = $(".UserID").val();

            //$("#" + $(this).parent().attr('id') + " .star").hide();
            $("#" + $(this).parent().attr('id') + " .yourScore").html("Your Score is : &nbsp;<b style='color:#ff9900; font-size:15px'>" + v + "</b>");
            
            var rating = {
                VideoId: artID,
                ApplicationUserId: UserId,
                Score: v,
                Date: "@DateTime.Now"
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Createe", "Ratings")",
                data: JSON.stringify(rating),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    //setNewScore(updateP, response);
                    console.log(response);
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                }
            });
        });
    });

    function setNewScore(container, data) {
        $(container).html(data);
        $("#myElem").show('1000').delay(2000).queue(function (n) {
            $(this).hide(); n();
        });
    }

</script>
@section VideoDetails {
                        <div class="col-md-8 content-top">
                            <div class="number">
                                <div class="feb">
                                    <b>@Model.DateTime.Day</b>
                                    @{
                                        string AbbreviatedMonth = new System.Globalization.DateTimeFormatInfo().GetAbbreviatedMonthName(Model.DateTime.Month).ToUpper();
                                    }
                                    <label>@AbbreviatedMonth</label>
                                </div>
                                <h3>@Html.DisplayFor(model => model.Title)</h3>
                                
                                <!-- AddThis: Put the following code in body tag -->
                                <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-50ac72a051b245aa" async="async"></script>

                                <!-- AddThis: Put the following code where to show the social media sharing icons -->
                                <div class="addthis_sharing_toolbox"></div>

                                <p><iframe frameborder="0" width="700" height="400" src="//www.dailymotion.com/embed/video/@Model.getDailyMotionVideoCode(Model.Url)" allowfullscreen></iframe><br /></p>

                                <div id="fb-root"></div>
                                <script>
                                    (function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3"; fjs.parentNode.insertBefore(js, fjs); }(document, 'script', 'facebook-jssdk'));
                                    $(function () {

                                    });
                                </script>
                                <style>
                                    .fb-video {
                                        max-width: 700px !important;
                                        max-height: 400px !important;
                                    }
                                </style>
                                <div class="fb-video" data-allowfullscreen="true" data-href="/ImranKhan.Official/videos/vb.143462899029472/1059558197419933/?type=1">
                                    <div class="fb-xfbml-parse-ignore">
                                        <blockquote cite="/ImranKhan.Official/videos/1059558197419933/">
                                            <a href="/ImranKhan.Official/videos/1059558197419933/"></a>
                                            <p>[ Dr Babar Awan gives concrete evidences of &quot;Systematic Rigging&quot; in elections 2013 ]Dr Babar awan talks about the rigging in elections 2013. He endorsed the stance of Imran Khan and tells his viewers about the proofs of rigging in elections 2013 . Its almost 2 years now of Imran Khan fighting against the corrupt rigging system in Pakistan and ALLHUMDULILLAH we have started getting rewards for what we have fought for in supreme court; election tribunals; and on the streets of Pakistan . Disqualification of Khawaja Saad Rafique and the nadra report on NA-122 is the victory for our stance and we will continue to fight till we achieve the whole audit of elections 2013.</p>
                                            Posted by <a href="https://www.facebook.com/ImranKhan.Official">Imran Khan (official)</a> on Sunday, May 10, 2015
                                        </blockquote>
                                    </div>
                                </div>

                                <div class="simply">
                                    <style type="text/css">
                                        .rating-star-block .star.outline {
                                            background: url("/images/rating/star-empty-lg.png") no-repeat scroll 0 0 rgba(0, 0, 0, 0);
                                        }

                                        .rating-star-block .star.filled {
                                            background: url("/images/rating/star-fill-lg.png") no-repeat scroll 0 0 rgba(0, 0, 0, 0);
                                        }

                                        .rating-star-block .star {
                                            color: rgba(0,0,0,0);
                                            display: inline-block;
                                            height: 24px;
                                            overflow: hidden;
                                            text-indent: -999em;
                                            width: 24px;
                                        }

                                        a {
                                            color: #005782;
                                            text-decoration: none;
                                        }
                                    </style>
                                    @{
                                        VdoValley.Models.VdoValleyContext db = new VdoValley.Models.VdoValleyContext();
                                        List<VdoValley.Models.Rating> ratings = db.Ratings.Where(r => r.VideoId == Model.VideoId).ToList();
                                        int TotalRating = 0;
                                        foreach(VdoValley.Models.Rating rating in ratings)
                                        {
                                            TotalRating += rating.Score;
                                        }
                                        double AvgRating = TotalRating / (double)ratings.Count;
                                        AvgRating = Math.Round(AvgRating, 2);
                                        if (double.IsNaN(AvgRating)) { AvgRating = 0.0; }
                                        
                                        string LoggedInUserId = System.Web.HttpContext.Current.User.Identity.GetUserId();
                                        int CurrentUsersScore = 0;
                                        List<VdoValley.Models.Rating> VideoScorer = db.Ratings.Where(r => r.ApplicationUserId.Equals(LoggedInUserId) && r.VideoId.Equals(Model.VideoId)).ToList();

                                        if (VideoScorer.Count > 0)
                                        {
                                            CurrentUsersScore = VideoScorer[0].Score;
                                        }
                                        
                                    }
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <div class="rating-star-block" id='div_0'>
                                                <input type="hidden" class="articleID" value='@Model.VideoId' />Current Rating : <span class="CurrentScore">@AvgRating / 5</span><br /><div class="yourScore">Your Score is : @CurrentUsersScore</div>
                                                <input type="hidden" class="UserID" value='@System.Web.HttpContext.Current.User.Identity.GetUserId()' />
                                                @{
                                                    if (VideoScorer.Count == 0)
                                                    {
                                                        <a class="star outline" href="#" rating="1" title="vote 1"> vote 1</a>
                                                        <a class="star outline" href="#" rating="2" title="vote 2"> vote 2</a>
                                                        <a class="star outline" href="#" rating="3" title="vote 3"> vote 3</a>
                                                        <a class="star outline" href="#" rating="4" title="vote 4"> vote 4</a>
                                                        <a class="star outline" href="#" rating="5" title="vote 5"> vote 5</a>
                                                    }
                                                }
                                            </div>
                                            <div class="tags-block">
                                                <span>Tags: </span>
                                                @{
                                                    ICollection<VdoValley.Models.Video> relatedVideos = new List<VdoValley.Models.Video>();
                                                    ICollection<VdoValley.Models.Tag> tags = Model.Tags;
                                                    int counter = 0;
                                                    foreach (var tag in tags)
                                                    {
                                                        <span><a href="@Url.Action("Index","Tags")">@tag.Name</a></span>
                                                        if (!counter.Equals(tags.Count - 1))
                                                        {
                                                            <span>,</span>
                                                        }
                                                        counter++;

                                                        // get videos for curren tag
                                                        foreach (var video in tag.Videos)
                                                        {
                                                            relatedVideos.Add(video);
                                                        }
                                                    }
                                                }
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <!-- AddThis: Put the following code where to show the social media sharing icons -->
                                            <div class="addthis_sharing_toolbox col-md-12"></div>
                                            <div class="col-md-12">Category: <a href="@Url.Action("Details", "Categories", new { id = Model.Category.CategoryId })">@Model.Category.Name</a></div>
                                        </div>
                                    </div>
                                </div>
                                    <!---->
                                    <div class="simply">
                                        <div class="story">
                                            <h4 class="stories stories-in"><span>Related Videos</span></h4>
                                        </div>
                                        @{
                                            if (relatedVideos.Count == 0)
                                            {
                                                <span>No related videos available</span>
                                            }
                                            else 
                                            { 
                                                foreach (var video in relatedVideos)
                                                {
                                                    <div class="thumbnail-container col-lg-3 col-md-4 col-xs-6 thumb">
                                                        <a class="thumbnail" href="/Videos/Details/@video.VideoId">
                                                            <img class="img-responsive" src="@video.thumbnail_large_url" alt="">
                                                            <div class="details">
                                                                <div class="panel-heading">
                                                                    @{
                                                    int maxTitleLength = 40;
                                                    string title = string.Empty;
                                                    if (video.Title.Length > maxTitleLength) { title = video.Title.Substring(0, maxTitleLength - 1) + "..."; } else { title = video.Title; }
                                                                    }
                                                                    <h3 class="panel-title col-lg-offset-1">@title</h3>
                                                                </div>
                                                            </div>
                                                        </a>
                                                    </div>
                                                }
                                            }
                                        }
                                        <div class="clearfix"></div>
                                    </div>
                                    <!---->
                                    <div class="simply">
                                        @{
                                            Disqus.Initialize("vdovalley");
                                        }
                                        @Disqus.ShowComments(Model.VideoId.ToString());
                                    </div>

                                    <!---->
                                </div>
                        </div>
    }

@Html.Partial("_SidebarPartial")
                        <!---->
            <p class="footer-class">Copyright © 2015 Magblog Template by  <a href="http://w3layouts.com/" target="_blank">W3layouts</a> </p>
            <script type="text/javascript">
                $(document).ready(function () {
                    /*
                    var defaults = {
                        containerID: 'toTop', // fading element id
                        containerHoverID: 'toTopHover', // fading element hover id
                        scrollSpeed: 1200,
                        easingType: 'linear'
                    };
                    */

                    $().UItoTop({ easingType: 'easeOutQuart' });

                });
            </script>
            <a href="#" id="toTop" style="display: block;"> <span id="toTopHover" style="opacity: 1;"> </span></a>


        </div>