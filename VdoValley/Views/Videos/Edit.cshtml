@model VdoValley.ViewModels.VideoViewModel

@{
    ViewBag.Title = "Edit";
}
<script>
    $(function () {
        var vid = $("input[type='hidden'][name='VideoId']").val();
        $.ajax({
            type: "POST",
            url: "/Tags/GetTagsFor/" + vid,
            //data: 1,
            //contentType: "application/json; charset=utf-8",
            //dataType: "json",
            success: function (response) {
                //console.log(response);
                handleData(response);
            },
            error: function (xhr, status, error) {
                //console.log(response);
                handleData(xhr.responseText)
            }
        });

        function handleData(data) {
            var tags = $.parseJSON(data);
            console.log(tags);
            $(tags).each(function (index, val) {
                appendTag(val.Name, "editVideo");
            });
        }

        $("#suggested-tags").on("click", ".active", function (e) {
            e.preventDefault();
            
            // get the tagName which is clicked and needs to be removed
            var tagName = $(this).find("a").text();

            // get hidden Tags input value
            var tags = $("input[name='Tags']").val();

            // split the value by comman to make array
            tagArray = tags.split(",");

            // get index of tagName to be removed
            var index = tagArray.indexOf(tagName);

            // remove the tag from array
            tagArray.splice(index, 1);

            // join the updated array to make updated comma separated string
            var updatedTags = tagArray.join();

            // update the hidden Tags field with new comman separated tags string
            $("input[name='Tags']").val(updatedTags);

            // remove the clicked tag
            $(this).remove();
        });

        $("input[name='InputTags']").keyup(function (e) {
            var tag = $(this).val();
            if (tag.substr(-1) == ",") {
                appendTag(tag.substring(0, tag.length - 1), "editVideo");
                $(this).val("");
            }
        });

    });
</script>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VideoId)
        @Html.HiddenFor(model => model.DateTime)

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThumbnailURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThumbnailURL, new { htmlAttributes = new { @class = "form-control", ng_model = "name", style = "width: 350px;" } })
                @Html.ValidationMessageFor(model => model.ThumbnailURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCategory, new SelectList(TempData["Categories"] as System.Collections.IEnumerable, "CategoryID", "Name"), "-Select Category-", htmlAttributes: new { @class = "form-control", style = "width: 350px;" })
                @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Featured, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Featured, new { htmlAttributes = new { @class = "form-control", style = "width: 350px;" } })
                @Html.ValidationMessageFor(model => model.Featured, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Tags, new { @class = "form-control", style = "width: 350px;", id = "InputTags", Name = "InputTags" })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                <input id="Tags" name="Tags" type="hidden" value="">
            </div>
        </div>

        <div class="form-group">
            <style>
                .nav-pills li a {
                    background-color: lightgray;
                }

                #suggested-tags {
                    margin-left: 18%;
                }
            </style>
            <ul class="nav nav-pills col-lg-offset-6 col-lg-10" id="suggested-tags">
                <!--<li class="active"><a href="#" style="background-color: #EEEEEE;padding:5px;color:grey;">Home</a></li>-->
            </ul>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script src="~/Scripts/AutoTagsSuggestion.js"></script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
